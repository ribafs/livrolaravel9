Criar app

laravel new dt-crud

cd dt-crud

Criar banco e conf .env

php artisan migrate

composer require yajra/laravel-datatables-oracle

Configurar

Opcional para laravel >= 5.5

config/app.php
'providers' => [
    Yajra\Datatables\DatatablesServiceProvider::class,
],
'aliases' => [
    'Datatables' => Yajra\Datatables\Facades\Datatables::class,
]

php artisan vendor:publish --provider="Yajra\DataTables\DataTablesServiceProvider"

Criar model e migration

php artisan make:model Book -m

Editar
app/Models/Book.php

<?php
namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Book extends Model
{
  use HasFactory;

  protected $fillable = [
    'title', 'code', 'author'
  ];
}

Editar a migration

databases/migrations/xxxbooks.php

public function up()
{
  Schema::create('books', function (Blueprint $table) {
    $table->id();
    $table->string('title');
    $table->string('code');
    $table->string('author');
    $table->timestamps();
  });
}

php artisan migrate

Criar rota

use App\Http\Controllers\DataTablesController;
Route::get('ajax-datatable-crud', [DataTablesController::class, 'index']);
Route::post('add-update-book', [DataTablesController::class, 'store']);
Route::post('edit-book', [DataTablesController::class, 'edit']);
Route::post('delete-book', [DataTablesController::class, 'destroy']);

Criar

php artisan make:controller DataTablesController

Editar
app/Http/Controllers/DataTablesController.php

<?php
namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Book;
use Datatables;

class DataTablesController extends Controller
{
  /**
  * Display a listing of the resource.
  *
  * @return \Illuminate\Http\Response
  */
  public function index()
  {
    if(request()->ajax()) {
    return datatables()->of(Book::select('*'))
    ->addColumn('action', 'book-action')
    ->rawColumns(['action'])
    ->addIndexColumn()
    ->make(true);
    }
    return view('book-list');
  }

  /**
  * Store a newly created resource in storage.
  *
  * @param \Illuminate\Http\Request $request
  * @return \Illuminate\Http\Response
  */
  public function store(Request $request)
  { 
    $bookId = $request->id;
    $book = Book::updateOrCreate(
    [
      'id' => $bookId
    ],
    [
      'title' => $request->title, 
      'code' => $request->code,
      'author' => $request->author
    ]); 
    return Response()->json($book);
  }

  /**
  * Show the form for editing the specified resource.
  *
  * @param \App\book $book
  * @return \Illuminate\Http\Response
  */
  public function edit(Request $request)
  { 
    $where = array('id' => $request->id);
    $book = Book::where($where)->first();
    return Response()->json($book);
  }

  /**
  * Remove the specified resource from storage.
  *
  * @param \App\book $book
  * @return \Illuminate\Http\Response
  */
  public function destroy(Request $request)
  {
    $book = Book::where('id',$request->id)->delete();
    return Response()->json($book);
  }
}

Criar

resources/views/book-list.blade.php

<!DOCTYPE html>
<html>
<head>
<title>Laravel 9 DataTable Ajax Books CRUD Example</title>
<meta name="csrf-token" content="{{ csrf_token() }}">
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<link href="https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css" rel="stylesheet">
<script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
</head>
<body>
<div class="container mt-4">
<div class="col-md-12 mt-1 mb-2"><button type="button" id="addNewBook" class="btn btn-success">Add</button></div>
<div class="card">
<div class="card-header text-center font-weight-bold">
<h2>Laravel 9 Ajax Book CRUD with DataTable Example Tutorial</h2>
</div>
<div class="card-body">
<table class="table table-bordered" id="datatable-ajax-crud">
<thead>
<tr>
<th>Id</th>
<th>Book Title</th>
<th>Code</th>
<th>Author</th>
<th>Created at</th>
<th>Action</th>
</tr>
</thead>
</table>
</div>
</div>
<!-- boostrap add and edit book model -->
<div class="modal fade" id="ajax-book-model" aria-hidden="true">
<div class="modal-dialog">
<div class="modal-content">
<div class="modal-header">
<h4 class="modal-title" id="ajaxBookModel"></h4>
</div>
<div class="modal-body">
<form action="javascript:void(0)" id="addEditBookForm" name="addEditBookForm" class="form-horizontal" method="POST">
<input type="hidden" name="id" id="id">
<div class="form-group">
<label for="name" class="col-sm-2 control-label">Book Name</label>
<div class="col-sm-12">
<input type="text" class="form-control" id="title" name="title" placeholder="Enter Book Name" maxlength="50" required="">
</div>
</div> 
<div class="form-group">
<label for="name" class="col-sm-2 control-label">Book Code</label>
<div class="col-sm-12">
<input type="text" class="form-control" id="code" name="code" placeholder="Enter Book Code" maxlength="50" required="">
</div>
</div>
<div class="form-group">
<label class="col-sm-2 control-label">Book Author</label>
<div class="col-sm-12">
<input type="text" class="form-control" id="author" name="author" placeholder="Enter author Name" required="">
</div>
</div>
<div class="col-sm-offset-2 col-sm-10">
<button type="submit" class="btn btn-primary" id="btn-save" value="addNewBook">Save changes
</button>
</div>
</form>
</div>
<div class="modal-footer">
</div>
</div>
</div>
</div>
<!-- end bootstrap model -->
<script type="text/javascript">
$(document).ready( function () {
$.ajaxSetup({
headers: {
'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
}
});
$('#datatable-ajax-crud').DataTable({
processing: true,
serverSide: true,
ajax: "{{ url('ajax-datatable-crud') }}",
columns: [
{data: 'id', name: 'id', 'visible': false},
{ data: 'title', name: 'title' },
{ data: 'code', name: 'code' },
{ data: 'author', name: 'author' },
{ data: 'created_at', name: 'created_at' },
{data: 'action', name: 'action', orderable: false},
],
order: [[0, 'desc']]
});
$('#addNewBook').click(function () {
$('#addEditBookForm').trigger("reset");
$('#ajaxBookModel').html("Add Book");
$('#ajax-book-model').modal('show');
});
$('body').on('click', '.edit', function () {
var id = $(this).data('id');
// ajax
$.ajax({
type:"POST",
url: "{{ url('edit-book') }}",
data: { id: id },
dataType: 'json',
success: function(res){
$('#ajaxBookModel').html("Edit Book");
$('#ajax-book-model').modal('show');
$('#id').val(res.id);
$('#title').val(res.title);
$('#code').val(res.code);
$('#author').val(res.author);
}
});
});
$('body').on('click', '.delete', function () {
if (confirm("Delete Record?") == true) {
var id = $(this).data('id');
// ajax
$.ajax({
type:"POST",
url: "{{ url('delete-book') }}",
data: { id: id },
dataType: 'json',
success: function(res){
var oTable = $('#datatable-ajax-crud').dataTable();
oTable.fnDraw(false);
}
});
}
});
$('body').on('click', '#btn-save', function (event) {
var id = $("#id").val();
var title = $("#title").val();
var code = $("#code").val();
var author = $("#author").val();
$("#btn-save").html('Please Wait...');
$("#btn-save"). attr("disabled", true);
// ajax
$.ajax({
type:"POST",
url: "{{ url('add-update-book') }}",
data: {
id:id,
title:title,
code:code,
author:author,
},
dataType: 'json',
success: function(res){
$("#ajax-book-model").modal('hide');
var oTable = $('#datatable-ajax-crud').dataTable();
oTable.fnDraw(false);
$("#btn-save").html('Submit');
$("#btn-save"). attr("disabled", false);
}
});
});
});
</script>
</div> 
</body>
</html>

Criar

resources/views/book-action.blade.php

<a href="javascript:void(0)" data-toggle="tooltip" data-id="{{ $id }}" data-original-title="Edit" class="edit btn btn-success edit">
Edit
</a>
<a href="javascript:void(0);" id="delete-book" data-toggle="tooltip" data-original-title="Delete" data-id="{{ $id }}" class="delete btn btn-danger">
Delete
</a>

php artisan serve

http://127.0.0.1:8000/ajax-datatable-crud

https://laratutorials.com/laravel-9-ajax-crud-example-using-datatable-js/


